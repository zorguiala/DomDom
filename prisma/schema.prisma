// prisma/schema.prisma

datasource db {
  provider = "sqlite" // Or "postgresql", "mysql", "sqlserver", "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String    @unique
  emailVerified DateTime? // Optional: For email verification process
  passwordHash  String
  role          String    @default("USER") // e.g., USER, ADMIN, EDITOR
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Optional: If using next-auth Prisma adapter, these fields might be needed
  // accounts      Account[]
  // sessions      Session[]

  @@map("users")
}

// Optional: If using next-auth Prisma adapter, define Account and Session models
// model Account {
//   id                String  @id @default(cuid())
//   userId            String
//   type              String
//   provider          String
//   providerAccountId String
//   refresh_token     String?
//   access_token      String?
//   expires_at        Int?
//   token_type        String?
//   scope             String?
//   id_token          String?
//   session_state     String?

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
//   @@map("accounts")
// }

// model Session {
//   id           String   @id @default(cuid())
//   sessionToken String   @unique
//   userId       String
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@map("sessions")
// }

// model VerificationToken {
//   identifier String
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
//   @@map("verification_tokens")
// }

model PasswordResetToken {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([token])
  @@map("password_reset_tokens")
}
