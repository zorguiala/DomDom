"use client";

import * as React from "react";
import { format as formatDateFns } from "date-fns";
import { Calendar as CalendarIcon } from "lucide-react";

import { cn } from "@/lib/utils";
import { Button } from "@/components/ui/button";
import { Calendar } from "@/components/ui/calendar"; // Assuming this will be created by shadcn/ui or react-day-picker
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";

interface DatePickerProps {
  date: Date | undefined;
  setDate: (date: Date | undefined) => void;
  placeholder?: string;
  disabled?: boolean;
  className?: string;
}

export function DatePicker({ date, setDate, placeholder, disabled, className }: DatePickerProps) {
  return (
    <Popover>
      <PopoverTrigger asChild disabled={disabled}>
        <Button
          variant={"outline"}
          className={cn(
            "w-full justify-start text-left font-normal",
            !date && "text-muted-foreground",
            className
          )}
        >
          <CalendarIcon className="mr-2 h-4 w-4" />
          {date ? formatDateFns(date, "PPP") : <span>{placeholder || "Pick a date"}</span>}
        </Button>
      </PopoverTrigger>
      <PopoverContent className="w-auto p-0">
        <Calendar
          mode="single"
          selected={date}
          onSelect={setDate}
          initialFocus
          disabled={disabled}
        />
      </PopoverContent>
    </Popover>
  );
}

// Note: This basic DatePicker assumes that `components/ui/calendar.tsx` exists.
// If it doesn't (because `shadcn/ui add calendar` hasn't been run),
// then the <Calendar /> component used here from "react-day-picker" directly
// would need to be styled manually or use its default styling.
// For a typical shadcn/ui setup, `components/ui/calendar.tsx` is generated by `npx shadcn-ui@latest add calendar`
// which wraps and styles react-day-picker.
//
// Since I cannot run `shadcn-ui add calendar`, I will create a basic `calendar.tsx`
// that directly uses `react-day-picker` and applies minimal necessary styling if possible,
// or just re-exports it, understanding it might not look perfectly like a shadcn one.
// For the purpose of this exercise, I'll assume the above DatePicker will work with a yet-to-be-created
// (or shimmed) `components/ui/calendar.tsx`.
